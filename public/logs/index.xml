<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Logs on Ito Collection</title>
    <link>https://itoschum.me/logs/</link>
    <description>Recent content in Logs on Ito Collection</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate><atom:link href="https://itoschum.me/logs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Visual Studio Code C/C&#43;&#43; Extension Setup on M1 Mac</title>
      <link>https://itoschum.me/logs/log_06/</link>
      <pubDate>Wed, 17 Mar 2021 14:32:00 -0400</pubDate>
      
      <guid>https://itoschum.me/logs/log_06/</guid>
      <description>Prerequisites   Visual Studio Code extension ms-vscode.cpptools
  Xcode Command-line Tools / Xcode IDE
 To install Xcode Command-line Tools: xcode-select --install To install Xcode IDE: mas install Xcode    Test Environment   macOS 11.2.3
$ uname -v Darwin Kernel Version 20.3.0: Thu Jan 21 00:06:51 PST 2021; root:xnu-7195.81.3~1/RELEASE_ARM64_T8101    Xcode 12.4 (12D4e)
$ clang --version Apple clang version 12.0.0 (clang-1200.0.32.29) Target: arm64-apple-darwin20.3.0 Thread model: posix InstalledDir: /Applications/Xcode.</description>
    </item>
    
    <item>
      <title>Converting Video to ASCII via LibCACA</title>
      <link>https://itoschum.me/logs/log_05/</link>
      <pubDate>Thu, 20 Dec 2018 15:54:00 +0800</pubDate>
      
      <guid>https://itoschum.me/logs/log_05/</guid>
      <description>Method 1: Screen Recording 在 CPU 性能足够的情况下，可以通过录制屏幕的方式来获得 LibCACA 输出的 ASCII 视频
1. List Devices 列举出 AVFoundation 的输入设备
ffmpeg -f avfoundation -list_devices true -i &amp;quot;&amp;quot; 2. Rec Screen 在第一步的基础上，使用 FFmpeg 选择需要的输入设备进行录制
# e.g. ffmpeg -y -f avfoundation \ -i 1:3 -framerate 30 \ -c:v libx264 -r 30 -pix_fmt uyvy422 \ -preset slow -crf 19 \ -c:a aac -b:a 192k \ &amp;quot;$INPUT $(date &amp;quot;+%Y-%m-%d %H-%M-%S&amp;quot;).mp4&amp;quot; * Rec Terminal 另一种办法是录制终端字符，在此使用现成的终端录制项目:
 asciinema: https://asciinema.org/ ScreenShooter: https://github.</description>
    </item>
    
    <item>
      <title>CloudKit Keychain Database&#39;s Crash Problem And Recovering Solution</title>
      <link>https://itoschum.me/logs/log_04/</link>
      <pubDate>Fri, 19 Oct 2018 05:44:00 +0800</pubDate>
      
      <guid>https://itoschum.me/logs/log_04/</guid>
      <description>现象描述  包括但不限于以下表现
 1. 异常流量  iOS 出现大量异常流量，如果是在 Cellular 环境下，表现为 Setting &amp;gt; Cellular 中，Cellular Data 栏目出现大量的 System Service 流量，表现在 Documents &amp;amp; Sync 栏目中，如图。   若安装了网络代理软件如 Surge，可发现异常流量主要是在与 icloud-content.com 通信产生的 HTTPS 下行流量，如图。  2. 设备运行异常且大量发热  设备可能会出现极其严重的卡顿，以至于进行难以操作，同时大量发热。  3. 大量第三方应用无法打开  大量第三方应用可能会出现无法打开的情况，具体表现为：在 Splash Screen 卡顿，直至 10 秒后被系统强制退出的现象。   目前发现「腾讯系」与「阿里系」应用似乎影响较小，可能 QQ、WeChat、AliPay 等应用仍然可以打开
 4. iCloud Keychain 数据库大小异常  在 Mac 的 ~/Library/Keychains/[UUID]/keychain-2.db 可见 keychain-2.db 大小异常，可能为数百兆字节甚至超过 1 吉字节（正常大小应为几十兆字节）。 使用 Sqlite 或相关 Sqlite 的 GUI 软件可见 keychain-2.</description>
    </item>
    
    <item>
      <title>iWork 版本管理文件清理（HFS&#43; Only）</title>
      <link>https://itoschum.me/logs/log_03/</link>
      <pubDate>Wed, 26 Jul 2017 01:34:00 +0800</pubDate>
      
      <guid>https://itoschum.me/logs/log_03/</guid>
      <description>13/06/2018 更新
如今在 APFS 下，Apple 似乎已经弃用了这套版本管理逻辑，所以版本管理也不再臃肿。
 今天打开 About This Mac &amp;gt; Storage &amp;gt; Manage &amp;gt; Review Files &amp;gt; File Browser, 突然发现了 ~/Library/Application Support/CloudDocs/session/r 目录下大量的 iWork 版本管理文件，而且一看容量有 13.5GB（如下图）。
 这样来看 iWork 文件华丽的版本管理背后并不光彩，Apple 没有选择增量备份，而是简单粗暴地用副本来完成类似 Time Machine 的版本管理（如封面图）。
 之后不论是 File Browser 还是 Finder 都无法删除这些 History Edition 文件（如下图）。
 无奈只好用 rm 命令再把文件拖入 Terminal 强删（如下图）。
 另外不知为什么此目录下的文件虽然不是隐藏文件，但在 Terminal 中是不可见的，需 ls -a / -al（如下图）。
 remove 完较大的 Keynote History Version 文件之后，算是清理出了不少硬盘空间，可能这就是所谓的 Purgeable 文件吧（如下图）。
 最后再附上清理后的效果图（如下图）。</description>
    </item>
    
    <item>
      <title>AirPort Extreme (5th gen.) Powered by Battery</title>
      <link>https://itoschum.me/logs/log_02/</link>
      <pubDate>Sun, 26 Mar 2017 21:00:00 +0800</pubDate>
      
      <guid>https://itoschum.me/logs/log_02/</guid>
      <description>为应对寝室的 “熄灯制度”，本人长期使用一款自带锂电池的便携式无线路由器 iShare，但是受限于体积与成本，路由器本身 WLAN 的速度限制较大（大概不到 20Mbps，远不及寝室宽带的 100Mbps），因此网络体验较差。而日间使用的 AirPort Time Capsule（2013 款）由于变压器内置，只能外接交流电源供电，这使得在夜间使用几乎是不可能的。
 为了改善寝室夜间的网络环境，结合以上情况综合考虑后，本人购入了一款二手 AirPort Extreme (5th gen.) (Model: A1408)，以下简称 A1408（如文章封面图）。A1408 的电源适配器外置，只需输入 12V 直流电即可，原装电源适配器上标示的额定输入是 12 V，1.8 A。因此，为了保证 A1408 能够整晚（23:00 - 次日 6:30）提供 WLAN，本人另购入一块 8450mah 的 12V 电池（由 18650 电芯组成）。
 同时因为同为 AirPort，也便于本人通过 Apple 原生 App: AirPort Utility 进行管理（如图：Time Capsule 开启 Bridge 模式）。
 之后的几天内，本人和室友在使用 A1408 的 WLAN 的过程中发现间歇性地出现网络不稳定的问题，发现在通过 SpeedTest 测速时，A1408 的测速结果不仅延迟比 Time Capsule 更大，且上下行速度都大打折扣。如图：第一项测速结果为 Time Capsule，其余项为 A1408。
 之后偶然将 A1408 的电源输入从电池改为电源适配器，再对 A1408 进行速度测试，恢复正常（如图）。</description>
    </item>
    
    <item>
      <title>Unlock Mac over Apple Watch</title>
      <link>https://itoschum.me/logs/log_01/</link>
      <pubDate>Tue, 28 Feb 2017 23:20:00 +0800</pubDate>
      
      <guid>https://itoschum.me/logs/log_01/</guid>
      <description>本人在北京时间 9 月 21 日更新了 watchOS 3 与 macOS 10.12 ，尝试使用 Apple Watch 解锁Mac的新特性，遇到了一些问题，在此记录。
Sept. 21st, I updated my devices to watchOS 3 and macOS 10.12, trying Apple Watch&amp;rsquo;s new feature unlocking the Mac. And there were some matters occurred, which was the reason why I logged them here.
 “系统偏好设置”内“安全性与隐私”设置中可以找到“允许 Apple Watch 解锁 Mac ”的勾选项，但仅在满足 watchOS 3 + macOS 10.12 + 开启“双重认证”／“两步验证”的情况下会显示。
We can find the option &amp;ldquo;Allow your Apple Watch to unlock your Mac&amp;rdquo; in &amp;ldquo;System Preference&amp;rdquo;, but the option only displays when &amp;ldquo;watchOS 3 + macOS 10.</description>
    </item>
    
  </channel>
</rss>
